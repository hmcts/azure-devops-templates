parameters:
  - name: environment
    type: string

  - name: testFilterCriteria
    type: string
    default: ''

  - name: acceptanceTestSettings
    type: object

  - name: azureSubscription
    type: string

  - name: netVersion
    type: string
    default: '8.x'

steps:
  - checkout: self

  - task: DownloadPipelineArtifact@2
    displayName: Download Acceptance Tests
    inputs:
      artifact: AcceptanceTests
      path: $(Pipeline.Workspace)/AcceptanceTests-$(Build.BuildId)

  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      packageType: sdk
      version: ${{ parameters.netVersion }}
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - powershell: |
      $runtimeSettings = '<?xml version="1.0" encoding="utf-8"?><RunSettings><TestRunParameters><Parameter name="TargetEnvironment" value="Production"/></TestRunParameters></RunSettings>'
      Write-Host "Runtime Setting:"
      Write-Host $runtimeSettings
      New-Item -Path $(Pipeline.Workspace)/AcceptanceTests-$(Build.BuildId) -Name parameters.runSettings -ItemType File -Value $runtimeSettings -Force | Out-Null
    displayName: Set Runtime Settings
    
  - task: DotNetCoreCLI@2
    displayName: Verify .NET Version
    inputs:
      testRunTitle: Acceptance Tests
      command: custom
      custom: --version
      
  # - powershell: |
  #     Write-Host "Swapping appsettings.json"
  #     Rename-Item -Path $(Pipeline.Workspace)/AcceptanceTests-$(Build.BuildId)/appsettings.json -NewName $(Pipeline.Workspace)/AcceptanceTests-$(Build.BuildId)/appsettings.json.old
  #     Rename-Item -Path $(Pipeline.Workspace)/AcceptanceTests-$(Build.BuildId)/appsettings.sds.json -NewName $(Pipeline.Workspace)/AcceptanceTests-$(Build.BuildId)/appsettings.json
  #   displayName: Swap appsettings files
  - ${{ each setting in parameters.acceptanceTestSettings }}:
    - ${{ if eq(setting.secret, true) }}:
      - template: ../../templates\Azure\KeyVault\get-secret.yaml
        parameters:
          azureSubscription: ${{ parameters.azureSubscription }}
          keyVaultName: ${{ setting.keyVaultName }}
          secretKeyName: ${{ setting.value }}
          taskName: ${{ replace(setting.value, '-', '_') }}__${{ replace(setting.name, ':', '_') }}

  - template: replace-app-settings.yml
    parameters:
      app_settings_path: $(Pipeline.Workspace)/AcceptanceTests-$(Build.BuildId)/appsettings.json
      settings: 
        - ${{ each setting in parameters.acceptanceTestSettings }}:
          - name: ${{ setting.name }}
            ${{ if eq(setting.secret, true) }}:
              value: $(${{ replace(setting.value, '-', '_') }}__${{ replace(setting.name, ':', '_') }}.prop.value)
            ${{ if ne(setting.secret, true) }}:
              value: ${{ setting.value }}

  - task: DotNetCoreCLI@2
    displayName: Run Acceptance Tests
    inputs:
      command: test
      projects: "$(Pipeline.Workspace)/AcceptanceTests-$(Build.BuildId)/*.AcceptanceTests.dll"
      publishTestResults: true
      ${{ if eq(parameters.testFilterCriteria, '' ) }}:
        arguments: --settings $(Pipeline.Workspace)/AcceptanceTests-$(Build.BuildId)/parameters.runSettings --logger console
      ${{ else }}: 
        arguments: --settings $(Pipeline.Workspace)/AcceptanceTests-$(Build.BuildId)/parameters.runSettings --logger console --filter ${{ parameters.testFilterCriteria }}