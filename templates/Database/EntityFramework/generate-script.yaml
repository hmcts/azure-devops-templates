parameters:
  - name: outputPath
    type: string
    default: "$(Build.SourcesDirectory)"
  - name: workingPath
    type: string
    default: "$(Build.SourcesDirectory)"
  - name: migrationsPath
    type: string
    default: "$(Build.SourcesDirectory)"
  - name: projectName
    type: string
  - name: contextName
    type: string
  - name: execute
    type: string
    default: 'true'
  - name: dotnetVersion
    type: string
    default: ''
  - name: efVersion
    type: string
    default: '8.0.4'

steps:
- ${{ if ne(parameters.dotnetVersion, '') }}:
  - task: UseDotNet@2
    displayName: 'Install .NET Core ${{ parameters.dotnetVersion }} SDK'
    inputs:
      packageType: sdk
      version: ${{ parameters.dotnetVersion }}
      installationPath: $(Agent.ToolsDirectory)/dotnet

- task: NuGetAuthenticate@1
  displayName: NuGet Authentication

- pwsh : |
    $efVersion="${{ parameters.efVersion }}"

    dotnet tool update dotnet-ef --global --version $efVersion
  displayName: Install EF Tool

- pwsh: |
    $outputPath="${{ parameters.outputPath }}"
    $workingPath="${{ parameters.workingPath }}"
    $projectName="${{ parameters.projectName }}"
    
    $contextName="${{ parameters.contextName }}"
    $outputName="$contextName.sql"

    $env:PATH += ":$Env:HOME/.dotnet/tools"    

    dotnet ef migrations script --output "$outputPath/$outputName" --context $contextName --idempotent --project "$workingPath/$projectName" --startup-project "$workingPath/$projectName" -v
  displayName: 'Generate ${{ parameters.contextName }} Scripts'

- task: PublishPipelineArtifact@1
  displayName: Publish Artifacts
  inputs:
    targetPath: $(Build.StagingDirectory)
    publishLocation: Pipeline
    artifact: ${{ parameters.contextName }}-$(Build.BuildId)