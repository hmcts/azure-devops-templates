parameters:
  - name: terraformPath
    type: string

steps:
  - bash: |
      echo "Run Report"
      workDir="$(System.DefaultWorkingDirectory)"
      tfDir="${{ parameters.terraformPath }}"
      echo "Make Directory"
      mkdir ${workDir}/TFSecReport
      docker run --rm -t -v ${tfDir}:/src tfsec/tfsec ./src --format JUnit > ${workDir}/TFSecReport/junit.xml
    displayName: TFSec Static Code Analysis
    continueOnError: true

  - powershell: |
      $reportFile="$(System.DefaultWorkingDirectory)/TFSecReport/junit.xml"
      $outputFile="$(System.DefaultWorkingDirectory)/TFSecReport/junit_final.xml"

      $reportContent=Get-Content -Path $reportFile

      foreach ($line in $reportContent){
        if ($line -like "<?xml*"){
          break;
        } elseif ($line -like "ERROR:*") {
          Write-Host "task.LogIssue type=error;]$line"
        } elseif ($line -like "WARNING:*") {
          Write-Host "##vso[task.LogIssue type=warning;]$line"
        } else {
          Write-Host $line
        }
      }

      Get-Content -Path $reportFile | Where-Object {$_ -notlike "WARNING:*" -and $_ -notlike "ERROR:*"} | Set-Content $outputFile
    displayName: TFSec Process Report
    condition: succeededOrFailed()


  - task: PublishTestResults@2
    displayName: Publish TFSec Report
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit_final.xml'
      searchFolder: '$(System.DefaultWorkingDirectory)/TFSecReport'
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true